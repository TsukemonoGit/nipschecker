name: Fetch Open Pull Requests and Nip list Files

on:
  schedule:
    - cron: "0 0 * * *" # 毎日UTC 00:00（日本時間 09:00）に実行
  workflow_dispatch: # 手動実行も可能

jobs:
  fetch-prs-and-md-files:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: GitHub API からオープンな PR を取得
        run: |
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/nostr-protocol/nips/pulls?state=open" | jq '.' > pull_requests.json

      - name: GitHub API から README.md を取得
        id: fetch_readme
        run: |
          # GitHub API で README.md の内容を取得し、Base64デコード
          CONTENT=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/nostr-protocol/nips/contents/README.md?ref=master" | jq -r '.content' | base64 -d)

          # `## List` セクションのみ抽出し、リストをJSONに変換
          echo "$CONTENT" | awk '
            /## List/{flag=1; next} 
            /^## /{if(flag){exit}} 
            flag' > list_section.md

      - name: NIP リストを JSON に変換
        id: extract_nip_list
        run: |
          # リスト部分を正規表現でパースして JSON 形式に変換
          cat list_section.md | grep -o '\[.*\](.*\.md)' | jq -Rn '
            [inputs 
            | capture("\\[(?<title>[^\\]]+)\\] \\((?<file>[^)]+)\\)") 
            | {title: .title, file: .file, url: ("https://github.com/nostr-protocol/nips/blob/master/" + .file)}]'

          # JSONの中身を確認
          cat nip_list.json



      - name: 変更があればコミットしてプッシュ
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git checkout main # main ブランチに切り替え

          # pull_requests.json と nip_list.json に変更があれば commit を実行
          git add pull_requests.json nip_list.json
          
          # 明示的にステージングしてコミット
          if [[ `git status --porcelain` ]]; then
            git commit -m "Update open pull requests list and nip　list files list"
            git push origin main --force # main ブランチにプッシュ
          else
            echo "No changes detected, skipping commit."
          fi
